{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\nexport default function useCachedResources() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoadingComplete = _useState2[0],\n      setLoadingComplete = _useState2[1];\n\n  useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _loadResourcesAndDataAsync.apply(this, arguments);\n    }\n\n    function _loadResourcesAndDataAsync() {\n      _loadResourcesAndDataAsync = _asyncToGenerator(function* () {\n        try {\n          SplashScreen.preventAutoHideAsync();\n          yield Font.loadAsync(_objectSpread(_objectSpread({}, FontAwesome.font), {}, {\n            'space-mono': require(\"../assets/fonts/SpaceMono-Regular.ttf\")\n          }));\n        } catch (e) {\n          console.warn(e);\n        } finally {\n          setLoadingComplete(true);\n          SplashScreen.hideAsync();\n        }\n      });\n      return _loadResourcesAndDataAsync.apply(this, arguments);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n}","map":{"version":3,"names":["FontAwesome","Font","SplashScreen","useEffect","useState","useCachedResources","isLoadingComplete","setLoadingComplete","loadResourcesAndDataAsync","preventAutoHideAsync","loadAsync","font","require","e","console","warn","hideAsync"],"sources":["C:/Users/hanif/OneDrive/Documents/Semester 7/DECO Studios DECO3801/wellderly-mobile/src/hooks/useCachedResources.ts"],"sourcesContent":["import { FontAwesome } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...FontAwesome.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,kBAAT,GAA8B;EAC3C,gBAAgDD,QAAQ,CAAC,KAAD,CAAxD;EAAA;EAAA,IAAOE,iBAAP;EAAA,IAA0BC,kBAA1B;;EAGAJ,SAAS,CAAC,YAAM;IAAA,SACCK,yBADD;MAAA;IAAA;;IAAA;MAAA,+CACd,aAA2C;QACzC,IAAI;UACFN,YAAY,CAACO,oBAAb;UAGA,MAAMR,IAAI,CAACS,SAAL,iCACDV,WAAW,CAACW,IADX;YAEJ,cAAcC,OAAO;UAFjB,GAAN;QAID,CARD,CAQE,OAAOC,CAAP,EAAU;UAEVC,OAAO,CAACC,IAAR,CAAaF,CAAb;QACD,CAXD,SAWU;UACRN,kBAAkB,CAAC,IAAD,CAAlB;UACAL,YAAY,CAACc,SAAb;QACD;MACF,CAjBa;MAAA;IAAA;;IAmBdR,yBAAyB;EAC1B,CApBQ,EAoBN,EApBM,CAAT;EAsBA,OAAOF,iBAAP;AACD"},"metadata":{},"sourceType":"module"}